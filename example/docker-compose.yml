version: '3'

services:
  kafka-connect-exporter:
    build: 
      context: ../
      dockerfile: Dockerfile
    image: zenreach/kafka-connect-exporter
    container_name: kafka-connect-exporter
    hostname: kafka-connect-exporter
    expose:
      - 9400
    environment:
      - KAFKA_CONNECT_HOST=http://connect:8083
    networks:
      - default

  connect:
    image: zenreach/kafka-connect:2.0.0
    container_name: connect
    hostname: connect
    expose:
      - 9400
    ports:
      - "8083:8083"
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka:9092
      - CONNECT_REST_PORT=8083
      - CONNECT_GROUP_ID=local
      - CONNECT_CONFIG_STORAGE_TOPIC=local-config
      - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_OFFSET_STORAGE_TOPIC=local-offsets
      - CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_STATUS_STORAGE_TOPIC=local-status
      - CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_REST_ADVERTISED_HOST_NAME=connect
    networks:
      - default

  kafka:
    image: confluentinc/cp-kafka:4.0.0
    container_name: kafka
    hostname: kafka
    environment:
      - ADVERTISED_HOST=kafka
      - ADVERTISED_PORT=9092
    expose:
      - 9092
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - JMX_PORT=5555
    networks:
      - default
  
  zookeeper:
    image: confluentinc/cp-zookeeper:4.0.0
    container_name: zookeeper
    hostname: zookeeper
    expose:
      - 2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - default

  prometheus:
    image: prom/prometheus:v2.2.0
    container_name: prometheus
    hostname: prometheus
    ports:
      - "9090:9090"
    networks:
      - default
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  mongo:
    image: mongo:3.2
    command: ["mongod", "--replSet", "rs0"]
    container_name: mongo
    hostname: mongo
    expose: 
      - 27017
    networks:
      - default

networks:
  default:
    driver: bridge
